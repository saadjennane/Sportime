import { SportimeGame } from '../types';
import { TOURNAMENT_COSTS } from '../config/constants';
import { mockSwipeMatchDays } from './mockSwipeGames';
import { mockFantasyGame } from './mockFantasy.tsx';

const bettingChallenges: SportimeGame[] = [
  {
    id: 'challenge-new',
    game_type: 'betting',
    name: 'Summer Showdown',
    tier: 'rookie',
    duration_type: 'mini',
    start_date: '2025-07-25',
    end_date: '2025-07-26',
    entry_cost: TOURNAMENT_COSTS.rookie.base * TOURNAMENT_COSTS.rookie.multipliers.mini,
    challengeBalance: 1000,
    status: 'Upcoming',
    totalPlayers: 0,
    is_linkable: true,
    minimum_players: 10,
    maximum_players: 100,
    requires_subscription: false,
    required_badges: [],
    minimum_level: 'Amateur',
    participants: [],
  },
  {
    id: 'challenge-1',
    game_type: 'betting',
    name: 'Pro Weekend League',
    tier: 'pro',
    duration_type: 'daily',
    start_date: '2025-07-18',
    end_date: '2025-07-20',
    entry_cost: TOURNAMENT_COSTS.pro.base * TOURNAMENT_COSTS.pro.multipliers.daily,
    challengeBalance: 1000,
    status: 'Upcoming',
    totalPlayers: 0,
    is_linkable: true,
    minimum_players: 50,
    maximum_players: 0,
    requires_subscription: true,
    required_badges: [],
    minimum_level: 'Pro',
    participants: [],
  },
  {
    id: 'challenge-2',
    game_type: 'betting',
    name: 'Elite Champions Knockouts',
    tier: 'elite',
    duration_type: 'daily',
    start_date: '2025-07-15',
    end_date: '2025-07-17',
    entry_cost: TOURNAMENT_COSTS.elite.base * TOURNAMENT_COSTS.elite.multipliers.daily,
    challengeBalance: 1000,
    status: 'Upcoming',
    totalPlayers: 0,
    is_linkable: true,
    minimum_players: 100,
    maximum_players: 500,
    requires_subscription: true,
    required_badges: ['badge-4'],
    minimum_level: 'Expert',
    participants: [],
  },
  {
    id: 'challenge-3',
    game_type: 'betting',
    name: 'International Friendlies',
    tier: 'rookie',
    duration_type: 'daily',
    start_date: '2025-07-01',
    end_date: '2025-07-03',
    entry_cost: TOURNAMENT_COSTS.rookie.base * TOURNAMENT_COSTS.rookie.multipliers.daily,
    challengeBalance: 1000,
    status: 'Finished',
    totalPlayers: 5123,
    minimum_players: 0,
    maximum_players: 0,
    requires_subscription: false,
    required_badges: [],
    minimum_level: 'Amateur',
    participants: [],
  }
];

const predictionGames: SportimeGame[] = mockSwipeMatchDays.map(md => ({
  id: md.id,
  name: md.name,
  game_type: 'prediction',
  tier: 'rookie', // Default tier for prediction games
  start_date: md.startDate,
  end_date: md.endDate,
  entry_cost: md.entryCost,
  is_linkable: md.is_linkable,
  status: md.status,
  matches: md.matches,
  totalPlayers: md.totalPlayers,
  minimum_players: 0,
  maximum_players: 0,
  requires_subscription: false,
  required_badges: [],
  minimum_level: 'Amateur',
  participants: [],
}));

const fantasyGames: SportimeGame[] = [
  {
    id: mockFantasyGame.id,
    name: mockFantasyGame.name,
    game_type: 'fantasy',
    tier: 'pro', // Default tier for fantasy games
    start_date: mockFantasyGame.startDate,
    end_date: mockFantasyGame.endDate,
    entry_cost: mockFantasyGame.entryCost,
    is_linkable: mockFantasyGame.is_linkable,
    status: mockFantasyGame.status,
    gameWeeks: mockFantasyGame.gameWeeks,
    totalPlayers: mockFantasyGame.totalPlayers,
    minimum_players: 0,
    maximum_players: 0,
    requires_subscription: false,
    required_badges: [],
    minimum_level: 'Amateur',
    participants: [],
  }
];

export const mockGames: SportimeGame[] = [
  ...bettingChallenges,
  ...predictionGames,
  ...fantasyGames,
];
